{
  "openapi": "3.1.0",
  "info": {
    "title": "Przykładowe API",
    "version": "1.0.0"
  },
  "servers": [
    {
      "url": "http://localhost:8055"
    }
  ],
  "paths": {
    "/number": {
      "get": {
        "summary": "Liczba",
        "responses": {
          "200": {
            "description": "Liczba",
            "content": {
              "application/json": {
                "schema": {
                  "type": "number",
                  "maximum": 5,
                  "minimum": -200,
                  "multipleOf": 3.5
                }
              }
            }
          }
        }
      }
    },
    "/text": {
      "get": {
        "summary": "Tekst",
        "responses": {
          "200": {
            "description": "Liczba",
            "content": {
              "application/json": {
                "schema": {
                  "type": "string",
                  "minLength": 20,
                  "maxLength": 30
                }
              }
            }
          }
        }
      }
    },
    "/users": {
      "get": {
        "summary": "Pobierz użytkowników",
        "responses": {
          "200": {
            "description": "Lista użytkowników",
            "content": {
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/User"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "summary": "Dodaj użytkownika",
        "requestBody": {
          "description": "Dane użytkownika",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "Użytkownik został dodany",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          }
        }
      }
    },
    "/users/{id}": {
      "get": {
        "summary": "Pobierz użytkownika o podanym identyfikatorze",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identyfikator użytkownika",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Użytkownik o podanym identyfikatorze",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "Użytkownik o podanym identyfikatorze nie istnieje"
          }
        }
      },
      "put": {
        "summary": "Zaktualizuj użytkownika o podanym identyfikatorze",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "Identyfikator użytkownika",
            "required": true,
            "schema": {
              "type": "integer"
            }
          }
        ],
        "requestBody": {
          "description": "Dane użytkownika",
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/User"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "Użytkownik został zaktualizowany",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            }
          },
          "404": {
            "description": "Użytkownik o podanym identyfikatorze nie istnieje"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "id": {
            "type": "integer",
            "format": "int64",
            "minimum": 1,
            "maximum": 1,
            "exclusiveMinimum": true
          },
          "name": {
            "type": "string"
          },
          "email": {
            "type": "string",
            "format": "email"
          },
          "age": {
            "type": "integer",
            "format": "int32"
          }
        },
        "required": [
          "name",
          "email"
        ]
      }
    }
  }
}